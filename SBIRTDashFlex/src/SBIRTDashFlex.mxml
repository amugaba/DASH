<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:pages="pages.*"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:userservice="services.userservice.*"
			   width="700" height="850" backgroundColor="#E2E6E8" currentState="Login"
			   width.Main="700" height.Main="850">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.buttonBarClasses.ButtonBarButton;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.NavigatorContent;
			import spark.events.IndexChangeEvent;
			
			import valueObjects.CostReportVO;
			import valueObjects.DataReportVO;
			import valueObjects.UserVO;	
			
			public static var DEBUG_MODE:int = 0;//0 = release, 1 = remote debug, 2 = local debug
			public static var ENDPOINT_RELEASE:String = "https://www.drugs.indiana.edu/SBIRT/DASH/gateway.php";
			public var adminMode:Boolean = false;
			public var adminAutoid:int = 0;
			
			[Bindable] public var activeUser:UserVO = new UserVO();
			public var activeDataReport:DataReportVO = null;
			public var activeCostReport:CostReportVO = null;
			
			[Bindable] public var reportList:ArrayCollection = new ArrayCollection();
			[Bindable] public var costList:ArrayCollection = new ArrayCollection();
			[Bindable] public var userList:ArrayCollection = new ArrayCollection();
			public var monthList:ArrayList = new ArrayList(["January","February","March","April","May","June","July","August","September","October","November","December"]);
			
			protected function mainState_enterStateHandler(event:FlexEvent):void
			{
				adminMode = activeUser.admin;
				
				if(adminMode)
				{
					//Show drop down, hide single-user label
					//Get all users and put in drop down list
					//When selecting a user from dropdown, set that user as activeUser
					adminAutoid = activeUser.autoid;
					adminUserSelect.visible = true;
					adminUserDropdown.visible = true;
					organizationLabel.visible = false;
					costList.removeAll();
					userList.removeAll();
					getUsersResult.token = userService.getUsers();
					activeUser = null;
					
				}
				else
				{
					//Just show single-user label, populate data and cost lists
					adminUserSelect.visible = false;
					adminUserDropdown.visible = false;
					organizationLabel.visible = true;
				}
				goToPage(pageHome);
			}
			
			public function goToPage(page:NavigatorContent):void
			{
				//when going to Home, leave everything open
				//when going to Reporting, close all pages except Home
				pageViewstack.selectedChild = page;
				adminUserDropdown.enabled = false;
				if(page == pageHome)
				{
					pageHome.refresh();
					adminUserDropdown.enabled = true;
				}
				if(page == pageReporting)
				{
					pageReporting.tabNavigator.selectedIndex = 0;
				}
				if(page == pageFinance)
				{
					pageFinance.tabNavigator.selectedIndex = 0;
				}
				
			}	
			
			protected function homeButton_clickHandler(event:MouseEvent):void
			{
				goToPage(pageHome);
			}
			
			protected function logoutButton_clickHandler(event:MouseEvent):void
			{
				currentState = "Login";
				activeUser = null;
				pageLogin.resetPage();
			}
			
			protected function getUsersResult_resultHandler(event:ResultEvent):void
			{
				for each(var user:UserVO in getUsersResult.lastResult)
				{
					if(user.adminid == adminAutoid)
						userList.addItem(user);
				}
			}
			
			protected function adminUserDropdown_changeHandler(event:IndexChangeEvent):void
			{
				activeUser = adminUserDropdown.selectedItem;
				pageHome.refresh();
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="Main" enterState="mainState_enterStateHandler(event)"/>
		<s:State name="Login"/>
	</s:states>
	<fx:Declarations>
		<s:CallResponder id="getUsersResult" result="getUsersResult_resultHandler(event)"/>
		<userservice:UserService id="userService"
								 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
								 showBusyCursor="true"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<pages:LoginPage id="pageLogin" width="100%" height="100%" label="Login" includeIn="Login"/>
	
	<mx:ViewStack id="pageViewstack" includeIn="Main" x="0" y="91" width="100%" height="100%"
				  backgroundColor="#E2E6E8" creationPolicy="all">
		<pages:HomePage id="pageHome" width="100%" height="100%" label="Home" />
		<pages:ReportingPage id="pageReporting" width="100%" height="100%" label="Reporting"/> 
		<pages:FeedbackPage id="pageFeedback" width="100%" height="100%" label="Feedback" />
		<pages:AccountPage id="pageAccount" width="100%" height="100%" label="Account" />
		<pages:FinancialPage id="pageFinance" width="100%" height="100%" label="Finance" />
	</mx:ViewStack>
	<s:Image x="0" y="0" source="assets/img/DashBanner.jpg" includeIn="Main"/>
	<s:Group includeIn="Main">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<s:Button id="homeButton" x="12" y="12" height="52" label="Home"
				  click="homeButton_clickHandler(event)"/>
		<s:Button id="logoutButton" x="606" y="12" height="52" label="Logout"
				  click="logoutButton_clickHandler(event)"
				  x.Main="618" y.Main="12"/>
		<s:Label id="organizationLabel" y="56" width="100%" fontSize="20" text="{activeUser.name}"
				 textAlign="center"
				 x.Main="0" y.Main="61"/>
		<s:Image x="235" y="3" source="assets/img/SbirtDash5.png"
				 x.Main="235" y.Main="10"/>
		<s:DropDownList id="adminUserDropdown" x="267" y="59" width="250" visible="false" dataProvider="{userList}" labelField="name"
						change="adminUserDropdown_changeHandler(event)"/>
		<s:Label id="adminUserSelect" x="167" y="63" fontSize="16" fontWeight="bold"
				 text="Select User:" visible="false"/>
	</s:Group>
</s:Application>
